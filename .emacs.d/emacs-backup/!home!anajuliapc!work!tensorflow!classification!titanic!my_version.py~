import tensorflow as tf
import pandas as pd

filename_queue = tf.train.string_input_producer(["train.csv"])

reader = tf.TextLineReader()
key, value = reader.read(filename_queue)

# Import data
columns = ['PassengerId', 'Survived', 'Pclass', 'Name',
           'Sex', 'Age', 'SibSp', 'Parch',
           'Ticket', 'Fare', 'Cabin', 'Embarked']

path = '~/work/tensorflow/classification/titanic/'
train_df = pd.read_csv(path+'train.csv', names=columns, skipinitialspace=True)
labels = pd.read_csv(path+'train.csv', usecols = [1])
test_df = pd.read_csv(path+'test.csv', names=columns, skipinitialspace=True)
data = train_df.values
labels = labels.values

train_df.head()

train_df.info()
print("----------------------------")
test_df.info()

# drop unnecessary columns, these columns won't be useful in analysis and prediction
train_df = titanic_df.drop(['PassengerId','Name','Ticket'], axis=1)
test_df = test_df.drop(['Name','Ticket'], axis=1)

# # Convert 'female' and 'male' entries to float
# for passenger in data:
#     if passenger[1] == 'female':
#         passenger[1] = 1.
#     else:
#         passenger[1] = 0.


# # Default values, in case of empty columns. Also specifies the type of the
# # decoded result.
# record_defaults = [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]
# col1, col2, col3, col4, col5, col6, col7, col8, col9, col10, col11, col12 = tf.decode_csv(
#     value, record_defaults=record_defaults)
# features = tf.stack([col1, col2, col3, col4])

# with tf.Session() as sess:
#     # Start populating the filename queue.
#     coord = tf.train.Coordinator()
#     threads = tf.train.start_queue_runners(coord=coord)
#     for i in range(891):
#         # Retrieve a single instance:
#         example, label = sess.run([features, col1])
# #     coord.request_stop()
# #     coord.join(threads)
